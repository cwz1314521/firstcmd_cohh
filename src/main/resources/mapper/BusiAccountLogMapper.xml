<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hema.newretail.backstage.dao.BusiAccountLogMapper" >
  <cache type="com.hema.newretail.backstage.common.caches.MybatisRedisCache" >
    <property name="eviction" value="FIFO" />
    <property name="flushInterval" value="6000000" />
    <property name="size" value="1024" />
    <property name="readOnly" value="false" />
  </cache>
  <resultMap id="BaseResultMap" type="com.hema.newretail.backstage.entry.BusiAccountLog" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="company_id" property="companyId" jdbcType="VARCHAR" />
    <result column="number" property="number" jdbcType="DECIMAL" />
    <result column="order_number" property="orderNumber" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="handle_flag" property="handleFlag" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="CHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="action_type" property="actionType" jdbcType="CHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, company_id, number, order_number, create_date, handle_flag, type, content, action_type
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from busi_account_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from busi_account_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.hema.newretail.backstage.entry.BusiAccountLog" >
    insert into busi_account_log (id, company_id, number, 
      order_number, create_date, handle_flag, 
      type, content, action_type
      )
    values (#{id,jdbcType=BIGINT}, #{companyId,jdbcType=VARCHAR}, #{number,jdbcType=DECIMAL}, 
      #{orderNumber,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{handleFlag,jdbcType=INTEGER}, 
      #{type,jdbcType=CHAR}, #{content,jdbcType=VARCHAR}, #{actionType,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hema.newretail.backstage.entry.BusiAccountLog" >
    insert into busi_account_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="number != null" >
        number,
      </if>
      <if test="orderNumber != null" >
        order_number,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="handleFlag != null" >
        handle_flag,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="actionType != null" >
        action_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="companyId != null" >
        #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        #{number,jdbcType=DECIMAL},
      </if>
      <if test="orderNumber != null" >
        #{orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="handleFlag != null" >
        #{handleFlag,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=CHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="actionType != null" >
        #{actionType,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hema.newretail.backstage.entry.BusiAccountLog" >
    update busi_account_log
    <set >
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        number = #{number,jdbcType=DECIMAL},
      </if>
      <if test="orderNumber != null" >
        order_number = #{orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="handleFlag != null" >
        handle_flag = #{handleFlag,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=CHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="actionType != null" >
        action_type = #{actionType,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hema.newretail.backstage.entry.BusiAccountLog" >
    update busi_account_log
    set company_id = #{companyId,jdbcType=VARCHAR},
      number = #{number,jdbcType=DECIMAL},
      order_number = #{orderNumber,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      handle_flag = #{handleFlag,jdbcType=INTEGER},
      type = #{type,jdbcType=CHAR},
      content = #{content,jdbcType=VARCHAR},
      action_type = #{actionType,jdbcType=CHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="selectList" parameterType="com.hema.newretail.backstage.common.queryparam.financial.AgentTransactionRecordCondition"
          resultType="com.hema.newretail.backstage.model.financial.AgentTransactionRecordBo">
    select al.company_id as agentCompanyId, agent.company_name as agentCompanyName, al.create_date as createDate,
      CASE
      WHEN al.type = 1 and (al.action_type=7 or al.action_type=8 or al.action_type=10 or al.action_type=12 or al.action_type=16 or al.action_type=17 or al.action_type=19)
      THEN al.number
      ELSE 0
      END
      as incomeAccount,
      CASE
      WHEN (al.type = 3 or al.type=4) and (al.action_type=6 or al.action_type=9 or al.action_type=16)
      THEN al.number
      ELSE 0
      END
      as depositAccount,
      CASE
      WHEN al.type = 5 and (al.action_type=11 or al.action_type=14 or al.action_type=15 or al.action_type=16 or al.action_type=18)
      THEN al.number
      ELSE 0
      END
      as freezAmount,
      CASE
      WHEN al.type = 2 and (al.action_type=1 or al.action_type=2 or al.action_type=3 or al.action_type=6 or al.action_type=13 or al.action_type=16)
      THEN al.number
      ELSE 0
      END
      as materialAccount,
      CASE al.action_type
      WHEN 1 THEN '原料充值'
      WHEN 2 THEN '原料充值'
      WHEN 3 THEN '原料充值'
      WHEN 6 THEN '代理清账'
      WHEN 7 THEN '出杯收益'
      WHEN 8 THEN '押金补贴到账'
      WHEN 9 THEN '押金补贴扣减'
      WHEN 10 THEN '提现申请'
      WHEN 17 THEN '提现申请'
      WHEN 11 THEN '提现成功'
      WHEN 18 THEN '提现成功'
      WHEN 12 THEN '提现失败'
      WHEN 19 THEN '提现失败'
      WHEN 13 THEN '原料扣减'
      WHEN 14 THEN '资金冻结'
      WHEN 15 THEN '资金解冻'
      WHEN 16 THEN '系统调整'
      ELSE '未知'
      END as actionType,
      al.content as remark
    from busi_account_log as al
    LEFT JOIN agent_user as agent on agent.id=al.company_id
    <where>
        1=1
        <if test="agenCompanyName != null and agenCompanyName != ''">
            and agent.company_name like concat('%',#{agenCompanyName}, '%')
        </if>
        <choose>
            <when test="startDate != null and startDate != '' and endDate == null and endDate == ''">
                and al.create_date between #{startDate,jdbcType=TIMESTAMP} and now()
            </when>
            <when test="startDate == null and startDate == '' and endDate != null and endDate != ''">
                and al.create_date between #{'2018-01-01 00:00:00',jdbcType=TIMESTAMP} and #{endDate,jdbcType=TIMESTAMP}
            </when>
            <when test="startDate != null and startDate != '' and endDate != null and endDate != ''">
                and al.create_date between #{startDate,jdbcType=TIMESTAMP} and #{endDate,jdbcType=TIMESTAMP}
            </when>
        </choose>
        <choose>
            <when test="startNumber != null and endNumber == null">
                and al.number &gt;= #{startNumber,jdbcType=DECIMAL}
            </when>
            <when test="startNumber == null and endNumber != null">
                and al.number &lt;= #{endNumber,jdbcType=DECIMAL}
            </when>
            <when test="startNumber != null and endNumber != null">
                and al.number between #{startNumber,jdbcType=DECIMAL} and #{endNumber,jdbcType=DECIMAL}
            </when>
        </choose>
        <choose>
            <when test="actionType != null and actionType == 1">
                and (al.action_type = 1 or al.action_type = 2 or al.action_type = 3)
            </when>
            <when test="actionType != null and actionType == 10">
              and (al.action_type = 10 or al.action_type = 17)
            </when>
            <when test="actionType != null and actionType == 11">
              and (al.action_type = 11 or al.action_type = 18)
            </when>
            <when test="actionType != null and actionType == 12">
              and (al.action_type = 12 or al.action_type = 19)
            </when>
            <when test="(actionType != null and actionType == 0) or actionType == null">

            </when>
            <otherwise>
                and al.action_type = #{actionType}
            </otherwise>
        </choose>
    </where>
    order by al.create_date desc
  </select>
</mapper>